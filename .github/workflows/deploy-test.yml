name: Build and Test

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build_binary:
    runs-on: ubuntu-latest
    name: Build Binary Package
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm gcc make libbpf-dev libelf-dev libncurses-dev pkg-config

    - name: Build project
      run: make
      
    - name: Create scripts
      run: make scripts
      
    - name: Create package
      run: |
        mkdir -p dist
        # Create a release tarball
        tar czf dist/tcp-fingerprint-firewall-$(git describe --tags --always).tar.gz \
          build/tcp-firewall build/tcp-monitor build/xdp_filter.o build/load_firewall.sh \
          README.md USAGE.md LICENSE.md user-manual.md troubleshooting.md \
          fingerprint-format.md README-MONITOR.md CONTRIBUTING.md
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: tcp-fingerprint-firewall-binary
        path: dist/
        retention-days: 7
        
  release:
    needs: build_binary
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    name: Create Release
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: tcp-fingerprint-firewall-binary
        path: dist
        
    - name: Display structure of downloaded files
      run: ls -R dist
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
        
  test_installation:
    runs-on: ubuntu-latest
    name: Test Installation
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm gcc make libbpf-dev libelf-dev libncurses-dev pkg-config
        
    - name: Run installation script
      run: sudo bash install.sh
      
    - name: Verify installation
      run: |
        ls -la build/
        file build/tcp-firewall
        file build/tcp-monitor
        file build/xdp_filter.o
        file build/load_firewall.sh
        
    # Can't actually load the XDP program in CI environment
    # but we can verify the basic compilation and script generation