# Makefile for TCP Fingerprint Firewall
# 
# This software is dual-licensed under:
# - GNU Affero General Public License v3.0 (AGPLv3) - for those willing to comply with AGPLv3 terms
# - Proprietary license - for those who cannot or do not want to adhere to AGPLv3 terms
#
# If you do not want to be bound by the AGPLv3 terms (such as releasing source code
# for modifications or network usage), you must acquire a proprietary license.
#
# See the LICENSE file for details.

CC = gcc
CLANG = clang
CFLAGS = -Wall -O2
LIBS = -lbpf -lelf

# Output directories
BUILD_DIR = build
INSTALL_DIR = /usr/local/bin

# Source files
BPF_SRC = ebpf_filter.c
CONTROL_SRC = ebpf_control.c
MONITOR_SRC = tcp_monitor.c

# Output files
BPF_OBJ = $(BUILD_DIR)/xdp_filter.o
CONTROL_BIN = $(BUILD_DIR)/tcp-firewall
MONITOR_BIN = $(BUILD_DIR)/tcp-monitor

# Targets
.PHONY: all clean install monitor

all: $(BUILD_DIR) $(BPF_OBJ) $(CONTROL_BIN) $(MONITOR_BIN)

$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

$(BPF_OBJ): $(BPF_SRC)
	$(CLANG) -O2 -target bpf -g -Wall -c $< -o $@
	# Preserve BTF information by not stripping
	# llvm-strip -g $@

$(CONTROL_BIN): $(CONTROL_SRC)
	$(CC) $(CFLAGS) $< -o $@ $(LIBS)

$(MONITOR_BIN): $(MONITOR_SRC)
	$(CC) $(CFLAGS) $< -o $@ $(LIBS) -lncurses
	@echo "Monitor built: $@"

# Build just the monitor
monitor: $(BUILD_DIR) $(MONITOR_BIN)

# Helper scripts for testing
scripts: $(BUILD_DIR) $(BPF_OBJ) $(CONTROL_BIN)
	@echo "#!/bin/bash" > $(BUILD_DIR)/load_firewall.sh
	@echo "# Helper script to load the TCP Fingerprint Firewall and add common scanner patterns" >> $(BUILD_DIR)/load_firewall.sh
	@echo "# Generated by Makefile" >> $(BUILD_DIR)/load_firewall.sh
	@echo "" >> $(BUILD_DIR)/load_firewall.sh
	@echo "# Find script directory to ensure we reference binaries correctly" >> $(BUILD_DIR)/load_firewall.sh
	@echo "SCRIPT_DIR=\"\$$(cd \"\$$(dirname \"\$$0\")\" && pwd)\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "FIREWALL=\"\$$SCRIPT_DIR/tcp-firewall\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "MONITOR=\"\$$SCRIPT_DIR/tcp-monitor\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "" >> $(BUILD_DIR)/load_firewall.sh
	@echo "# Check if binaries exist" >> $(BUILD_DIR)/load_firewall.sh
	@echo "if [ ! -f \"\$$FIREWALL\" ]; then" >> $(BUILD_DIR)/load_firewall.sh
	@echo "  echo \"Error: tcp-firewall binary not found at \$$FIREWALL\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "  echo \"Make sure you have built the project with 'make'\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "  exit 1" >> $(BUILD_DIR)/load_firewall.sh
	@echo "fi" >> $(BUILD_DIR)/load_firewall.sh
	@echo "" >> $(BUILD_DIR)/load_firewall.sh
	@echo "if [ -z \"\$$1\" ]; then" >> $(BUILD_DIR)/load_firewall.sh
	@echo "  echo \"Usage: \$$0 <interface>\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "  echo \"Example: \$$0 eth0\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "  exit 1" >> $(BUILD_DIR)/load_firewall.sh
	@echo "fi" >> $(BUILD_DIR)/load_firewall.sh
	@echo "" >> $(BUILD_DIR)/load_firewall.sh
	@echo "# Load the firewall" >> $(BUILD_DIR)/load_firewall.sh
	@echo "echo \"Loading firewall on interface \$$1...\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "sudo \"\$$FIREWALL\" \$$1 load" >> $(BUILD_DIR)/load_firewall.sh
	@echo "" >> $(BUILD_DIR)/load_firewall.sh
	@echo "# Add common scanner fingerprints" >> $(BUILD_DIR)/load_firewall.sh
	@echo "echo \"Adding fingerprints for common scanners...\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "sudo \"\$$FIREWALL\" \$$1 add \"1024:::\" DROP    # Nmap scanner" >> $(BUILD_DIR)/load_firewall.sh
	@echo "sudo \"\$$FIREWALL\" \$$1 add \"65535:::\" DROP   # ZMap scanner" >> $(BUILD_DIR)/load_firewall.sh
	@echo "sudo \"\$$FIREWALL\" \$$1 add \"*:2:1460:*\" DROP # Nmap with options" >> $(BUILD_DIR)/load_firewall.sh
	@echo "" >> $(BUILD_DIR)/load_firewall.sh
	@echo "# List configured fingerprints" >> $(BUILD_DIR)/load_firewall.sh
	@echo "echo \"Configured fingerprints:\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "sudo \"\$$FIREWALL\" \$$1 list" >> $(BUILD_DIR)/load_firewall.sh
	@echo "" >> $(BUILD_DIR)/load_firewall.sh
	@echo "echo \"Firewall loaded successfully. To monitor matches, run:\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "echo \"sudo \$$FIREWALL \$$1 show -c\"" >> $(BUILD_DIR)/load_firewall.sh
	@echo "echo \"Or use the monitor tool: sudo \$$MONITOR \$$1\"" >> $(BUILD_DIR)/load_firewall.sh 
	@chmod +x $(BUILD_DIR)/load_firewall.sh
	@echo "Created load_firewall.sh script in $(BUILD_DIR)/"

install: all
	install -m 0755 $(CONTROL_BIN) $(INSTALL_DIR)
	install -m 0755 $(MONITOR_BIN) $(INSTALL_DIR)
	install -m 0644 $(BPF_OBJ) $(INSTALL_DIR)
	@echo "Installation complete!"

clean:
	rm -rf $(BUILD_DIR)

test: all scripts
	@echo "To test: ./$(BUILD_DIR)/load_firewall.sh <interface>"
